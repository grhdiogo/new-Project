[{"C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\views\\login.tsx":"1","C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\index.tsx":"2","C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\routes.tsx":"3","C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\services\\api.ts":"4","C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\views\\orders.tsx":"5","C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\views\\createCep.tsx":"6","C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\components\\sideBar.tsx":"7","C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\App.tsx":"8","C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\components\\Layout.tsx":"9","C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\views\\clients\\editClient.tsx":"10","C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\views\\clients.tsx":"11","C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\routes\\private.tsx":"12"},{"size":1485,"mtime":1612830992744,"results":"13","hashOfConfig":"14"},{"size":231,"mtime":1612402176598,"results":"15","hashOfConfig":"14"},{"size":774,"mtime":1612829966750,"results":"16","hashOfConfig":"14"},{"size":146,"mtime":1612817440752,"results":"17","hashOfConfig":"14"},{"size":1828,"mtime":1612574651004,"results":"18","hashOfConfig":"14"},{"size":2112,"mtime":1612581504395,"results":"19","hashOfConfig":"14"},{"size":227,"mtime":1612815859881,"results":"20","hashOfConfig":"14"},{"size":230,"mtime":1612402282468,"results":"21","hashOfConfig":"14"},{"size":481,"mtime":1612403569913,"results":"22","hashOfConfig":"14"},{"size":6689,"mtime":1612647580184,"results":"23","hashOfConfig":"14"},{"size":1458,"mtime":1612811434541,"results":"24","hashOfConfig":"14"},{"size":758,"mtime":1612829258458,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"10gn2j4",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\views\\login.tsx",["56"],"C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\index.tsx",["57"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nimport Routes from './routes';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n",["58","59"],"C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\routes.tsx",[],"C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\services\\api.ts",[],"C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\views\\orders.tsx",["60","61"],"import React,{useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {FiPlus} from 'react-icons/fi'\r\nimport api from '../services/api'\r\n\r\ninterface Orders{\r\n    id: number;\r\n    deliverDay:string;\r\n    deliverPeriod:string;\r\n    paymentType:string;\r\n    status:string;\r\n    client:{\r\n        id:string;\r\n        name:string;\r\n        lastName:string\r\n};\r\n\r\n\r\n}\r\n\r\nexport default function Orders(){\r\n    const [orders, setOrders] = useState<Orders[]>([])\r\n\r\n    useEffect(()=>{\r\n        api.get('ordersList').then(res=>{\r\n           setOrders(res.data)\r\n        })\r\n    })\r\n\r\n    return(\r\n        <div id=\"order\">\r\n            \r\n            <h1>Pedidos</h1>\r\n            <Link to=\"/cep/create\">\r\n                <FiPlus size={30}/>\r\n            </Link>\r\n            <table >\r\n                <thead>\r\n                    <tr>\r\n                        <th>Entregar em</th>\r\n                        <th>Período</th>\r\n                        <th>Número do Pedido</th>\r\n                        <th>Nome do Cliente</th>\r\n                        <th>Condição do Pagamento</th>\r\n                        <th>Situação</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orders.map(order=>{return(\r\n                        <tr key={order.id}>\r\n                            <td>{order.deliverDay}</td>\r\n                            <td>{order.deliverPeriod}</td>\r\n                            <td>{order.id}</td>\r\n                            <td>{order.client.name +\" \"+ order.client.lastName}</td>\r\n                            <td>{order.paymentType}</td>\r\n                            <td>{order.status}</td>\r\n                        </tr>\r\n                    )})}\r\n                </tbody>\r\n\r\n            </table>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\views\\createCep.tsx",["62","63"],"import React,{useState,FormEvent} from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport {FiArrowLeft} from 'react-icons/fi'\r\nimport api from '../services/api'\r\n\r\n\r\nexport default function CreateCep(){\r\n    const history = useHistory()\r\n\r\n    const [zipCode, setZipCode] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const [state, setState] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [zone, setZone] = useState('')\r\n    const [street, setStreet] = useState('')\r\n\r\n\r\n    async function submit(event: FormEvent){\r\n        event.preventDefault()\r\n     \r\n        const data = {zipCode,country,state,city,zone,street}\r\n        const dataString = JSON.stringify(data)\r\n        const jsonData = JSON.parse(dataString)\r\n        //await api.post('createCep', jsonData)\r\n\r\n        alert(\"CEP cadastrado\")\r\n        history.push(\"/\")\r\n        \r\n        \r\n    }\r\n\r\n    return(\r\n       <div>\r\n           <div>\r\n                <form>\r\n                    <h1>Novo Cep</h1>\r\n                    <label>Cep</label><input id=\"zipCode\" value={zipCode} onChange={event => setZipCode(event.target.value)}/><br/>\r\n                    <label>País</label><input id=\"country\" value={country} onChange={event => setCountry(event.target.value)}/><br/>\r\n                    <label>Estado</label><input id=\"state\" value={state} onChange={event => setState(event.target.value)}/><br/>\r\n                    <label>Cidade</label><input id=\"city\" value={city} onChange={event => setCity(event.target.value)}/><br/>\r\n                    <label>Bairro</label><input id=\"zone\" value={zone} onChange={event => setZone(event.target.value)}/><br/>\r\n                    <label>Rua</label><input id=\"street\" value={street} onChange={event => setStreet(event.target.value)}/><br/>\r\n                    <input type=\"submit\" value=\"Enviar\" onClick={submit}/><br/>\r\n                    <div>\r\n                        <Link to=\"/\" ><FiArrowLeft size={30}/></Link>\r\n                    </div>\r\n                </form>\r\n           </div>\r\n       </div>\r\n       \r\n            \r\n        \r\n    )\r\n}","C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\components\\sideBar.tsx",[],"C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\App.tsx",[],["64","65"],"C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\components\\Layout.tsx",[],"C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\views\\clients\\editClient.tsx",["66"],"import React,{useEffect, useState, FormEvent} from 'react'\r\nimport api from '../../services/api'\r\nimport { useParams } from 'react-router-dom'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport Select from 'react-select'\r\n\r\ninterface Params{\r\n    id:string;\r\n}\r\n\r\n\r\ninterface Cep{\r\n    id:number;\r\n    zipCode:string;\r\n    country:string;\r\n    state:string;\r\n    zone:string;\r\n    street:string;\r\n}\r\n\r\ninterface Client{\r\n    id:number;\r\n    username:string;\r\n    password:string;\r\n    cpf_cnpj: number;\r\n    nickname: string;\r\n    name:string;\r\n    lastName:string;\r\n    birthday:string;\r\n    telephone:number;\r\n    telephone2:number;\r\n    number:number;\r\n    complement:string\r\n    cep:{\r\n        id:number;\r\n        zipCode:string;\r\n        country:string;\r\n        state:string;\r\n        zone:string;\r\n        street:string;\r\n    }\r\n}\r\n\r\n\r\nexport default  function EditClient(){\r\n    const history = useHistory()\r\n    const params = useParams<Params>()\r\n    const [ceps, setCeps] = useState<Cep[]>([])\r\n\r\n    const [id, setId] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [cpf_cnpj, setCpf_Cpnj] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [nickname, setNickname] = useState('')\r\n    const [birthday, setBirthday] = useState('')\r\n    const [telephone, setTelephone] = useState('')\r\n    const [telephone2, setTelephone2] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [complement, setComplement] = useState('')\r\n\r\n    const [cepId, setCepId] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const [state, setState] = useState('')\r\n    const [street, setStreet] = useState('')\r\n    const [zipCode, setZipcode] = useState('')\r\n    const [zone, setZone] = useState('')\r\n\r\n    useEffect(()=>{\r\n        api.get(`user/${params.id}`).then(res=>{\r\n           setId(res.data.id)\r\n           setUsername(res.data.username)\r\n           setPassword(res.data.password)\r\n           setCpf_Cpnj(res.data.cpf_cnpj)\r\n           setName(res.data.name)\r\n           setLastName(res.data.lastName)\r\n           setNickname(res.data.nickname)\r\n           setBirthday(res.data.birthday)\r\n           setTelephone(res.data.telephone)\r\n           setTelephone2(res.data.telephone2)\r\n           setCepId(res.data.cep.id)\r\n           setNumber(res.data.number)\r\n           setComplement(res.data.complement)\r\n           setZipcode(res.data.cep.zipCode)\r\n           setCountry(res.data.cep.country)\r\n           setState(res.data.cep.state)\r\n           setZone(res.data.cep.zone)\r\n           setStreet(res.data.cep.street)\r\n        })\r\n        api.get('cepsList').then(res=>{\r\n            setCeps(res.data)\r\n        })\r\n    },[params.id])\r\n\r\n    if(!id){\r\n        return(<p>Carregando...</p>)\r\n    }\r\n    \r\n    const options = [{}]\r\n\r\n    for (let i = 0; i < ceps.length; i++) {\r\n        options[i]={value:ceps[i].id,label:ceps[i].zipCode}\r\n    }\r\n\r\n    \r\n\r\n    async function submit(event: FormEvent){\r\n        event.preventDefault()\r\n    \r\n        const data = {id,username,password,cpf_cnpj,name,lastName,nickname,birthday,telephone,telephone2,cepId,number,complement}\r\n        const dataString = JSON.stringify(data)\r\n        const jsonData = JSON.parse(dataString)\r\n\r\n        await api.post('updateUser', jsonData)\r\n        alert(\"Usuário alterado\")\r\n        history.push(\"/\")\r\n    }\r\n\r\n    function changeCep(value){\r\n        if(value!=null){\r\n            ceps.forEach(cep=>{\r\n                if(cep.id===value.value){\r\n                    setCountry(cep.country)\r\n                    setZone(cep.zone)\r\n                    setStreet(cep.street)\r\n                    setZone(cep.zone)\r\n                    setZipcode(cep.zipCode)\r\n                    setCepId(value.value)\r\n                    \r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <form>\r\n                <input id=\"id\" defaultValue={id} type=\"hidden\"></input><br/>\r\n\r\n                <label>Login</label>\r\n                <input id=\"username\"  value={username} onChange={event => setUsername(event.target.value)}></input><br/>\r\n\r\n                <label>Senha</label>\r\n                <input id=\"password\" value={password} onChange={event => setPassword(event.target.value)}></input><br/>\r\n\r\n                <label>Cpf / Cnpj</label>\r\n                <input id=\"cpf_cppj\" value={cpf_cnpj} onChange={event => setCpf_Cpnj(event.target.value)}></input><br/>\r\n\r\n                <label>Nome</label>\r\n                <input id=\"name\" value={name} onChange={event => setName(event.target.value)}></input><br/>\r\n\r\n                <label>Sobrenome</label>\r\n                <input id=\"lastName\" value={lastName} onChange={event => setLastName(event.target.value)}></input><br/>\r\n\r\n                <label>Identificador</label>\r\n                <input id=\"nickname\" value={nickname} onChange={event => setNickname(event.target.value)}></input><br/>\r\n\r\n                <label>Data de Nascimento</label>\r\n                <input id=\"birthday\" value={birthday} onChange={event => setBirthday(event.target.value)}></input><br/>\r\n\r\n                <label>Telefone</label>\r\n                <input id=\"telephone\" type=\"number\" value={telephone} onChange={event => setTelephone(event.target.value)}></input><br/>\r\n\r\n                <label>Celular</label>\r\n                <input id=\"telephone2\" type=\"number\" value={telephone2} onChange={event => setTelephone2(event.target.value)}></input><br/>\r\n\r\n                <br/>\r\n               <input id=\"cepId\" type=\"hidden\" value={cepId}  onChange={event => setCepId(event.target.value)}></input><br/>\r\n\r\n                <label id=\"zipCode\">Cep: </label><Select options={options} onChange={changeCep} placeholder={zipCode}/>\r\n                <label id=\"country\">{'País: '+country}</label><br/>\r\n                <label id=\"state\">{'Estado: '+state}</label><br/>\r\n                <label id=\"zone\">{'Bairro: '+zone}</label><br/>\r\n                <label id=\"street\">{'Rua: '+street}</label><br/>\r\n                \r\n\r\n\r\n                <label>Número</label><input id=\"number\" type=\"number\" value={number} onChange={event => setNumber(event.target.value)}></input><br/>\r\n\r\n                <label>Complemento</label>\r\n                <input id=\"complement\" value={complement} onChange={event => setComplement(event.target.value)}></input><br/>\r\n\r\n                <input type=\"submit\" value=\"Enviar\" onClick={submit}/>\r\n                    <div>\r\n                        <Link to=\"/\" >Voltar</Link>\r\n                    </div>\r\n            </form> \r\n        </div>\r\n    )\r\n}","C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\views\\clients.tsx",[],"C:\\Users\\Diogo\\Documents\\workspace\\Projeto\\web\\src\\routes\\private.tsx",[],{"ruleId":"67","severity":1,"message":"68","line":21,"column":24,"nodeType":"69","messageId":"70","endLine":21,"endColumn":26},{"ruleId":"71","severity":1,"message":"72","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":14},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":21,"column":25,"nodeType":"73","messageId":"81","endLine":21,"endColumn":31},{"ruleId":"71","severity":1,"message":"82","line":22,"column":42,"nodeType":"73","messageId":"74","endLine":22,"endColumn":48},{"ruleId":"71","severity":1,"message":"83","line":4,"column":8,"nodeType":"73","messageId":"74","endLine":4,"endColumn":11},{"ruleId":"71","severity":1,"message":"84","line":23,"column":15,"nodeType":"73","messageId":"74","endLine":23,"endColumn":23},{"ruleId":"75","replacedBy":"85"},{"ruleId":"77","replacedBy":"86"},{"ruleId":"71","severity":1,"message":"87","line":21,"column":11,"nodeType":"73","messageId":"74","endLine":21,"endColumn":17},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","no-native-reassign",["88"],"no-negated-in-lhs",["89"],"@typescript-eslint/no-redeclare","'Orders' is already defined.","redeclared","'Orders' is defined but never used.","'api' is defined but never used.","'jsonData' is assigned a value but never used.",["88"],["89"],"'Client' is defined but never used.","no-global-assign","no-unsafe-negation"]